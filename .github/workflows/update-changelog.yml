# .github/workflows/update-changelog.yml
name: Update BGI Changelog

on:
  schedule:
    - cron: '0 8 * * *'  # 每天UTC 8点运行
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ main ]

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create docs directory
      run: mkdir -p docs
        
    - name: Fetch BGI releases data
      run: |
        curl -H "Accept: application/vnd.github.v3+json" \
             -H "User-Agent: BGI-Changelog-Generator" \
             "https://api.github.com/repos/babalae/better-genshin-impact/releases" \
             -o releases.json
        
    - name: Generate static files
      run: |
        cat > generate.js << 'SCRIPT_END'
        const fs = require('fs');
        
        const releases = JSON.parse(fs.readFileSync('releases.json', 'utf8'));
        
        const processedReleases = releases
          .filter(release => !release.draft)
          .map(release => ({
            version: release.tag_name,
            name: release.name || release.tag_name,
            publishedAt: release.published_at,
            publishedAtFormatted: new Date(release.published_at).toLocaleString('zh-CN', {timeZone: 'Asia/Shanghai'}),
            body: release.body || '无更新说明',
            htmlUrl: release.html_url,
            downloadUrl: release.assets.length > 0 ? release.assets[0].browser_download_url : null,
            prerelease: release.prerelease
          }));
        
        // 生成JSON文件
        const jsonData = {
          lastUpdated: new Date().toISOString(),
          lastUpdatedFormatted: new Date().toLocaleString('zh-CN', {timeZone: 'Asia/Shanghai'}),
          totalReleases: processedReleases.length,
          releases: processedReleases
        };
        
        fs.writeFileSync('docs/changelog.json', JSON.stringify(jsonData, null, 2));
        
        // 生成纯文本版本
        const textLines = [
          'Better Genshin Impact 版本更新日志',
          '最后更新: ' + new Date().toLocaleString('zh-CN', {timeZone: 'Asia/Shanghai'}),
          '数据来源: https://github.com/babalae/better-genshin-impact/releases',
          '',
          '=' * 80,
          ''
        ];
        
        processedReleases.forEach(release => {
          textLines.push('版本: ' + release.version);
          textLines.push('发布时间: ' + release.publishedAtFormatted);
          textLines.push('状态: ' + (release.prerelease ? '预发布版本' : '正式版本'));
          textLines.push('更新内容:');
          textLines.push(release.body);
          if (release.downloadUrl) {
            textLines.push('下载链接: ' + release.downloadUrl);
          }
          textLines.push('GitHub页面: ' + release.htmlUrl);
          textLines.push('');
          textLines.push('=' * 80);
          textLines.push('');
        });
        
        fs.writeFileSync('docs/changelog.txt', textLines.join('\n'));
        
        // 生成Markdown
        const mdLines = [
          '# Better Genshin Impact 版本更新日志',
          '',
          '> 最后更新: ' + new Date().toLocaleString('zh-CN', {timeZone: 'Asia/Shanghai'}),
          '> 数据来源: [GitHub Releases](https://github.com/babalae/better-genshin-impact/releases)',
          ''
        ];
        
        processedReleases.forEach(release => {
          mdLines.push('## ' + release.name + (release.prerelease ? ' (预发布)' : ''));
          mdLines.push('');
          mdLines.push('**版本:** `' + release.version + '`');
          mdLines.push('**发布时间:** ' + release.publishedAtFormatted);
          mdLines.push('**GitHub页面:** [查看详情](' + release.htmlUrl + ')');
          if (release.downloadUrl) {
            mdLines.push('**下载链接:** [点击下载](' + release.downloadUrl + ')');
          }
          mdLines.push('');
          mdLines.push('### 更新内容');
          mdLines.push('');
          mdLines.push('```');
          mdLines.push(release.body);
          mdLines.push('```');
          mdLines.push('');
          mdLines.push('---');
          mdLines.push('');
        });
        
        fs.writeFileSync('docs/changelog.md', mdLines.join('\n'));
        
        // 生成HTML
        function escapeHtml(text) {
          return text
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#039;');
        }
        
        const html = `<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Better Genshin Impact - 版本更新日志</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Microsoft YaHei', sans-serif; line-height: 1.6; color: #333; background: #f5f5f5; margin: 0; padding: 20px; }
        .container { max-width: 1000px; margin: 0 auto; background: white; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); padding: 30px; }
        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #eee; padding-bottom: 20px; }
        .header h1 { color: #2c5aa0; margin-bottom: 10px; font-size: 2.2em; }
        .header p { color: #666; font-size: 1.1em; }
        .info { background: #e3f2fd; padding: 15px; border-radius: 8px; margin-bottom: 30px; border-left: 4px solid #2196f3; }
        .release { margin-bottom: 30px; border: 1px solid #e0e0e0; border-radius: 8px; overflow: hidden; }
        .release.prerelease { border-color: #ff9800; background-color: #fff8e1; }
        .release-header { background: #f8f9fa; padding: 20px; border-bottom: 1px solid #e0e0e0; }
        .release-header h2 { margin-bottom: 10px; font-size: 1.4em; }
        .release-header h2 a { color: #2c5aa0; text-decoration: none; }
        .prerelease-badge { background: #ff9800; color: white; padding: 2px 8px; border-radius: 12px; font-size: 0.7em; margin-left: 10px; }
        .meta { font-size: 0.9em; color: #666; margin-top: 10px; }
        .version { background: #e3f2fd; padding: 4px 8px; border-radius: 4px; color: #1976d2; margin-right: 15px; }
        .body { padding: 20px; background: white; }
        .body pre { white-space: pre-wrap; word-wrap: break-word; font-family: Consolas, Monaco, monospace; font-size: 0.9em; background: #f8f9fa; padding: 15px; border-radius: 4px; border: 1px solid #e0e0e0; }
        .download { padding: 15px 20px; background: #f0f7ff; border-top: 1px solid #e0e0e0; }
        .download a { display: inline-block; background: #4caf50; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Better Genshin Impact</h1>
            <p>版本更新日志 - 静态页面</p>
        </div>
        <div class="info">
            <strong>最后更新:</strong> ${new Date().toLocaleString('zh-CN', {timeZone: 'Asia/Shanghai'})} | 
            <strong>版本数:</strong> ${processedReleases.length} | 
            <a href="changelog.json">JSON</a> | 
            <a href="changelog.txt">TXT</a> | 
            <a href="changelog.md">MD</a>
        </div>
        <div class="releases">
            ${processedReleases.map(release => `
                <div class="release ${release.prerelease ? 'prerelease' : ''}">
                    <div class="release-header">
                        <h2>
                            <a href="${release.htmlUrl}" target="_blank">${escapeHtml(release.name)}</a>
                            ${release.prerelease ? '<span class="prerelease-badge">预发布</span>' : ''}
                        </h2>
                        <div class="meta">
                            <span class="version">版本: ${release.version}</span>
                            <span>发布: ${release.publishedAtFormatted}</span>
                        </div>
                    </div>
                    <div class="body">
                        <pre>${escapeHtml(release.body)}</pre>
                    </div>
                    ${release.downloadUrl ? `<div class="download"><a href="${release.downloadUrl}" target="_blank">下载此版本</a></div>` : ''}
                </div>
            `).join('')}
        </div>
    </div>
</body>
</html>`;
        
        fs.writeFileSync('docs/index.html', html);
        
        console.log('静态文件生成完成!');
        SCRIPT_END
        
        node generate.js
        rm -f releases.json generate.js
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
